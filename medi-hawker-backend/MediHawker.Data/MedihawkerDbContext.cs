// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;



namespace MediHawker.Data
{
    public partial class MedihawkerDbContext : DbContext
    {
        public MedihawkerDbContext()
        {
        }

        public MedihawkerDbContext(DbContextOptions<MedihawkerDbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Consumers> Consumers{ get; set; }
        public virtual DbSet<ConsumersDetails> ConsumersDetails { get; set; }
        public virtual DbSet<ConsumersPurchaseHistory> ConConsumersPurchaseHistory { get; set; }
        public virtual DbSet<OrderDetails> ConOrderDetails { get; set; }
        public virtual DbSet<Products> ConOrders { get; set; }
        public virtual DbSet<Products> ConProducts { get; set; }
        public virtual DbSet<Manufacturer> Manufacturer { get; set; }
        public virtual DbSet<Generic> Generic { get; set; }


        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Consumers>(entity =>
            {
                entity.HasKey(e => e.ConsumerId)
                    .HasName("PK_Consumers");

                entity.ToTable("CON_CONSUMERS");

                entity.Property(e => e.ConsumerId).HasColumnName("CONSUMER_ID");

                entity.Property(e => e.CartItemCount).HasColumnName("CART_ITEM_COUNT");

                entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedOn)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_ON");

                entity.Property(e => e.Password)
                    .HasMaxLength(100)
                    .HasColumnName("PASSWORD");

                entity.Property(e => e.Phone)
                    .HasMaxLength(100)
                    .HasColumnName("PHONE");

                entity.Property(e => e.UserName)
                    .HasMaxLength(100)
                    .HasColumnName("USER_NAME");
            });

            modelBuilder.Entity<ConsumersDetails>(entity =>
            {
                entity.HasKey(e => e.ConsumerDetailsId)
                    .HasName("PK_CONSUMERS_DETAILS");

                entity.ToTable("CON_CONSUMERS_DETAILS");

                entity.Property(e => e.ConsumerDetailsId).HasColumnName("CONSUMER_DETAILS_ID");

                entity.Property(e => e.Address)
                    .HasMaxLength(100)
                    .HasColumnName("ADDRESS");

                entity.Property(e => e.ConsumerId).HasColumnName("CONSUMER_ID");

                entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedOn)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_ON");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .HasColumnName("EMAIL");

                entity.Property(e => e.FirstName)
                    .HasMaxLength(100)
                    .HasColumnName("FIRST_NAME");

                entity.Property(e => e.LastName)
                    .HasMaxLength(100)
                    .HasColumnName("LAST_NAME");
            });

            modelBuilder.Entity<ConsumersPurchaseHistory>(entity =>
            {
                entity.HasKey(e => e.PurchaseHistoryId)
                    .HasName("PK_CONSUMERS_PURCHASE_HISTORY");

                entity.ToTable("CON_CONSUMERS_PURCHASE_HISTORY");

                entity.Property(e => e.PurchaseHistoryId).HasColumnName("PURCHASE_HISTORY_ID");

                entity.Property(e => e.ConsumerId).HasColumnName("CONSUMER_ID");

                entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedOn)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_ON");

                entity.Property(e => e.OrderId).HasColumnName("ORDER_ID");
            });

            modelBuilder.Entity<OrderDetails>(entity =>
            {
                entity.HasKey(e => e.OrderDetailsId)
                    .HasName("PK_ORDER_DETAILS");

                entity.ToTable("CON_ORDER_DETAILS");

                entity.Property(e => e.OrderDetailsId).HasColumnName("ORDER_DETAILS_ID");

                entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedOn)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_ON");

                entity.Property(e => e.OrderId).HasColumnName("ORDER_ID");

                entity.Property(e => e.ProductId).HasColumnName("PRODUCT_ID");

                entity.Property(e => e.PurchaseCount).HasColumnName("PURCHASE_COUNT");

                entity.Property(e => e.TotalPrice).HasColumnName("TOTAL_PRICE");

                entity.Property(e => e.UnitPrice).HasColumnName("UNIT_PRICE");
            });

            modelBuilder.Entity<Orders>(entity =>
            {
                entity.HasKey(e => e.OrderId)
                    .HasName("PK_ORDERS");

                entity.ToTable("CON_ORDERS");

                entity.Property(e => e.OrderId).HasColumnName("ORDER_ID");

                entity.Property(e => e.ConsumerId).HasColumnName("CONSUMER_ID");

                entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedOn)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_ON");

                entity.Property(e => e.ItemCount).HasColumnName("ITEM_COUNT");

                entity.Property(e => e.TotalPrice).HasColumnName("TOTAL_PRICE");
            });

            modelBuilder.Entity<Products>(entity =>
            {
                entity.HasKey(e => e.ProductId)
                     .HasName("PK_PRODUCTS_1");

                entity.ToTable("CON_PRODUCTS");

                entity.Property(e => e.ProductId).HasColumnName("PRODUCT_ID");

                entity.Property(e => e.Address).HasColumnName("ADDRESS");

                entity.Property(e => e.BuyingPrice)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("BUYING_PRICE");

                entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");

                entity.Property(e => e.CreatedOn)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATED_ON");

                entity.Property(e => e.Dose).HasColumnName("DOSE");

                entity.Property(e => e.GenericId).HasColumnName("GENERIC_ID");

                entity.Property(e => e.GenericName)
                    .HasMaxLength(100)
                    .HasColumnName("GENERIC_NAME");

                entity.Property(e => e.ImgPath).HasColumnName("IMG_PATH");

                entity.Property(e => e.ManufacturerId).HasColumnName("MANUFACTURER_ID");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .HasColumnName("NAME");

                entity.Property(e => e.PaxCount)
                    .HasMaxLength(100)
                    .HasColumnName("PAX_COUNT");

                entity.Property(e => e.SellingPrice)
                    .HasColumnType("decimal(18, 0)")
                    .HasColumnName("SELLING_PRICE");

                entity.Property(e => e.UnitPrice).HasColumnName("UNIT_PRICE");
                entity.Property(e => e.Description).HasColumnName("DESCRIPTION");
            });

            modelBuilder.Entity<Manufacturer>(entity =>
            {
                entity.ToTable("MANUFACTURER");

                entity.Property(e => e.ManufacturerId).HasColumnName("MANUFACTURER_ID");

                entity.Property(e => e.Address)
                    .HasMaxLength(100)
                    .HasColumnName("ADDRESS");

                entity.Property(e => e.Email)
                    .HasMaxLength(100)
                    .HasColumnName("EMAIL");

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .HasColumnName("NAME");

                entity.Property(e => e.Phone).HasColumnName("PHONE");
            
            });


            modelBuilder.Entity<Generic>(entity =>
            {
                entity.ToTable("GENERIC");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Description).HasColumnName("DESCRIPTION");
                entity.Property(e => e.Pharmacology).HasColumnName("PHARMACOLOGY");
                entity.Property(e => e.Indication).HasColumnName("INDICATION");

                entity.Property(e => e.Name)
                    .HasMaxLength(50)
                    .HasColumnName("NAME");
            });

        OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}